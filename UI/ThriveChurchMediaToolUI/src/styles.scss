@import '../node_modules/bootstrap/scss/bootstrap';
@import 'themes.scss';

/* You can add global styles to this file, and also import other style files */

/* Apply theme to body and html */
html {
    /* To make use of full height of page*/
    height: 100%;
    margin: 0;
    background-color: var(--color-background);
    color: var(--color-text-primary);
}

body {
    height: 100%;
    margin: 0;
    min-width: min-content;
    background-color: var(--color-background);
    color: var(--color-text-primary);
}

/* Global component styles using CSS custom properties */
#web-icon {
    padding-right: 2px;
    padding-left: 2px;
}

#submit-button {
    background-color: var(--color-submit-button);
    border-color: var(--color-submit-button);
    color: var(--color-text-inverse);
}

#submit-button:not(:disabled):not(.disabled):active {
    background-color: var(--color-submit-button-active);
    border-color: var(--color-submit-button-active);
}

button:focus {
    outline: none !important;
    box-shadow: none !important;
}

#submit-button:hover {
    background-color: var(--color-submit-button-hover);
    border-color: var(--color-submit-button-hover);
}

a {
    color: var(--color-navbar-text);
}

a:active {
    color: var(--color-navbar-text-active);
}

a:hover {
    color: var(--color-navbar-text-hover);
}

#profile-dropdown {
    transform: translate3d(-50px, -2px, 0) !important;
}

.dropdown-item:active {
    background-color: var(--color-dropdown-item-active);
}

.login-modal-footer {
    display: flex;
}

.login-modal-footer {
    .mr-auto {
        color: var(--color-login-modal) !important;
    }
}

/* Bootstrap Color Overrides using CSS Custom Properties */

// Primary
.text-primary {
    color: var(--color-primary) !important;
}
a.text-primary:hover{
    color: var(--color-primary-hover) !important;
}
.btn-primary,
.border-primary {
    border-color: var(--color-primary) !important;
}
.btn-primary,
.bg-primary {
    background-color: var(--color-primary) !important;
}
.btn-primary:hover {
    background-color: var(--color-primary-hover) !important;
    border-color: var(--color-primary-hover) !important;
}
.btn-primary:not(.disabled):active:focus,
.btn-primary:focus {
    background-color: var(--color-primary-active) !important;
    border-color: var(--color-primary-active) !important;
}

// Secondary
.text-secondary {
    color: var(--color-tertiary) !important;
}
a.text-secondary:hover {
    color: var(--color-tertiary-hover) !important;
}
.btn-secondary,
.border-secondary {
    border-color: var(--color-tertiary) !important;
}
.btn-secondary,
.bg-secondary {
    background-color: var(--color-tertiary) !important;
}
.btn-secondary:hover {
    background-color: var(--color-tertiary-hover) !important;
    border-color: var(--color-tertiary-hover) !important;
}
.btn-secondary:not(.disabled):active:focus,
.btn-secondary:focus {
    background-color: var(--color-tertiary-active) !important;
    border-color: var(--color-tertiary-active) !important;
}

// Tertiary
.text-tertiary {
    color: var(--color-tertiary) !important;
}
a.text-tertiary:hover {
    color: var(--color-tertiary-hover) !important;
}
.btn-tertiary,
.border-tertiary {
    border-color: var(--color-tertiary) !important;
}
.btn-tertiary,
.bg-tertiary {
    background-color: var(--color-tertiary) !important;
}
.btn-tertiary:hover {
    background-color: var(--color-tertiary-hover) !important;
    border-color: var(--color-tertiary-hover) !important;
}
.btn-tertiary:not(.disabled):active:focus,
.btn-tertiary:focus {
    background-color: var(--color-tertiary-active) !important;
    border-color: var(--color-tertiary-active) !important;
}

// Light
.text-light {
    color: var(--color-text-inverse) !important;
}
a.text-light:hover {
    color: var(--color-text-secondary) !important;
}
.btn-light,
.border-light {
    border-color: var(--color-background) !important;
}
.btn-light,
.bg-light {
    background-color: var(--color-background) !important;
}
.btn-light:hover {
    background-color: var(--color-background-secondary) !important;
    border-color: var(--color-background-secondary) !important;
}
.btn-light:not(.disabled):active:focus,
.btn-light:focus {
    background-color: var(--color-background-tertiary) !important;
    border-color: var(--color-background-tertiary) !important;
}

// Dark
.text-dark {
    color: var(--color-text-primary) !important;
}
a.text-dark:hover {
    color: var(--color-text-secondary) !important;
}
.btn-dark,
.border-dark {
    border-color: var(--color-navbar-bg) !important;
}
.btn-dark,
.bg-dark {
    background-color: var(--color-navbar-bg) !important;
}
.btn-dark:hover {
    background-color: var(--color-background-tertiary) !important;
    border-color: var(--color-background-tertiary) !important;
}
.btn-dark:not(.disabled):active:focus,
.btn-dark:focus {
    background-color: var(--color-background-secondary) !important;
    border-color: var(--color-background-secondary) !important;
}

/* ===== NG-SELECT THEMING FOR LIGHT AND DARK MODES ===== */
.ng-select {
    position: relative;
    display: block;
    width: 100%;

    /* Main container styling */
    .ng-select-container {
        background-color: var(--color-background) !important;
        border: 1px solid var(--color-border) !important;
        border-radius: 0.375rem;
        color: var(--color-text-primary) !important;
        min-height: 38px;
        padding: 0.25rem 0.5rem;
        transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
        position: relative;
    }

    /* Value container - holds selected tags and input */
    .ng-value-container {
        padding: 0.125rem 0;
        display: flex !important;
        flex-wrap: wrap !important;
        gap: 0.25rem;
        align-items: center;
    }

    /* Ensure proper spacing when multiple tags are selected */
    &.ng-select-multiple .ng-value-container {
        padding: 0.375rem 0.25rem;
        min-height: 38px;
    }

    /* Make sure the value container is visible and not hidden */
    .ng-has-value .ng-value-container {
        display: flex !important;
    }

    /* Opened state */
    &.ng-select-opened > .ng-select-container {
        background-color: var(--color-background) !important;
        border-color: var(--color-primary) !important;
        box-shadow: 0 0 0 0.2rem rgba(84, 186, 202, 0.25);
    }

    /* Focus state */
    &.ng-select-focused:not(.ng-select-opened) > .ng-select-container {
        border-color: var(--color-primary) !important;
        box-shadow: 0 0 0 0.2rem rgba(84, 186, 202, 0.25);
    }

    /* Disabled state */
    &.ng-select-disabled > .ng-select-container {
        background-color: var(--color-background-secondary) !important;
        border-color: var(--color-border) !important;
        opacity: 0.8;
        cursor: not-allowed;
    }

    /* Placeholder styling */
    .ng-value-container .ng-placeholder {
        color: var(--color-text-secondary) !important;
        font-size: 1rem;
    }

    /* Search input styling */
    .ng-value-container .ng-input {
        padding: 0.25rem 0;

        > input {
            color: var(--color-text-primary) !important;
            background-color: transparent !important;
            padding: 0.25rem 0.5rem;
            min-width: 200px;
        }
    }

    /* Ensure input has proper spacing in multi-select */
    &.ng-select-multiple .ng-value-container .ng-input {
        padding-left: 0.25rem;
    }

    /* Dropdown panel - positioned below the entire select container */
    .ng-dropdown-panel {
        background-color: var(--color-background) !important;
        border: 1px solid var(--color-border) !important;
        border-radius: 0.375rem;
        box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
        margin-top: 4px;
        z-index: 1050;
        position: absolute;
        width: 100%;
        top: 100%;
        left: 0;

        /* Dropdown items container */
        .ng-dropdown-panel-items {
            max-height: 240px;

            /* Individual option styling */
            .ng-option {
                background-color: var(--color-background) !important;
                color: var(--color-text-primary) !important;
                padding: 0.5rem 0.75rem;
                cursor: pointer;
                transition: background-color 0.15s ease-in-out, color 0.15s ease-in-out;

                /* Hover state - CRITICAL FIX for dark mode readability */
                &.ng-option-marked {
                    background-color: var(--color-dropdown-item-focus) !important;
                    color: var(--color-dropdown-item) !important;
                }

                /* Selected state */
                &.ng-option-selected {
                    background-color: var(--color-primary) !important;
                    color: white !important;
                    font-weight: 500;
                }

                /* Selected + Hover state */
                &.ng-option-selected.ng-option-marked {
                    background-color: var(--color-primary-hover) !important;
                    color: white !important;
                }

                /* Disabled state */
                &.ng-option-disabled {
                    color: var(--color-text-secondary) !important;
                    background-color: var(--color-background-secondary) !important;
                    cursor: not-allowed;
                    opacity: 0.6;
                }

                /* Child option (for grouped selects) */
                &.ng-option-child {
                    padding-left: 1.5rem;
                }
            }
        }

        /* Scrollbar styling for dropdown */
        .ng-dropdown-panel-items::-webkit-scrollbar {
            width: 8px;
        }

        .ng-dropdown-panel-items::-webkit-scrollbar-track {
            background: var(--color-background-secondary);
            border-radius: 4px;
        }

        .ng-dropdown-panel-items::-webkit-scrollbar-thumb {
            background: var(--color-border-dark);
            border-radius: 4px;
        }

        .ng-dropdown-panel-items::-webkit-scrollbar-thumb:hover {
            background: var(--color-text-secondary);
        }
    }

    /* Clear button styling */
    .ng-clear-wrapper {
        color: var(--color-text-secondary) !important;
        transition: color 0.15s ease-in-out;

        &:hover {
            color: var(--color-text-primary) !important;
        }

        .ng-clear {
            font-size: 18px;
            line-height: 1;
        }
    }

    /* Arrow/caret styling */
    .ng-arrow-wrapper {
        padding-right: 0.5rem;

        .ng-arrow {
            border-color: var(--color-text-secondary) transparent transparent !important;
            border-style: solid;
            border-width: 5px 5px 2.5px;
            transition: transform 0.2s ease-in-out;
        }
    }

    /* Arrow when dropdown is open */
    &.ng-select-opened .ng-arrow-wrapper .ng-arrow {
        border-color: transparent transparent var(--color-text-secondary) !important;
        border-width: 0 5px 5px;
    }

    /* Multi-select tag/chip styling */
    .ng-value {
        background-color: var(--color-primary) !important;
        color: white !important;
        border-radius: 0.25rem;
        padding: 0.375rem 0.5rem;
        margin: 0.125rem 0.25rem 0.125rem 0;
        font-size: 0.875rem;
        display: inline-flex !important;
        align-items: center;
        max-width: calc(100% - 0.5rem);
        line-height: 1.2;
        flex-shrink: 0;

        /* Tag label */
        .ng-value-label {
            display: inline-block;
            padding-right: 0.25rem;
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
        }

        /* Remove icon for tags */
        .ng-value-icon {
            display: inline-flex;
            align-items: center;
            padding: 0 0.25rem;
            cursor: pointer;
            transition: background-color 0.15s ease-in-out;
            border-radius: 0.125rem;

            &:hover {
                background-color: rgba(255, 255, 255, 0.3) !important;
            }

            &.left {
                border-right: 1px solid rgba(255, 255, 255, 0.3);
                margin-right: 0.25rem;
            }

            &.right {
                border-left: 1px solid rgba(255, 255, 255, 0.3);
                margin-left: 0.25rem;
            }
        }
    }

    /* Loading spinner */
    .ng-spinner-loader {
        border-color: var(--color-primary) transparent transparent !important;
    }

    /* "No items found" message */
    .ng-option.ng-option-disabled {
        text-align: center;
        font-style: italic;
    }
}